//
//  Breeds.swift
//  PetHomeStay
//
//  Created by YangBo on 15/9/9.
//  Copyright (c) 2015å¹´ Pet Home Stay. All rights reserved.
//

import UIKit

class BreedsPickViewController: UITableViewController, UITableViewDataSource, UITableViewDelegate, UISearchBarDelegate, UISearchDisplayDelegate  {
  
  
  @IBOutlet weak var mysearchbar: UISearchBar!
  
  var filterBreeds = [String]()
  var BreedstransferLabel: String!
  
  
  @IBOutlet weak var loadingIndicator: UIActivityIndicatorView!
  
  var dogBreedsArray = [String]()
  
  override func viewDidLoad() {
    super.viewDidLoad()
    tableView.delegate = self
    tableView.dataSource = self
    mysearchbar.delegate = self
    self.loadingIndicator.hidden = false
    self.loadingIndicator.startAnimating()
    getDogBreedsFromAPI()
    // Uncomment the following line to preserve selection between presentations
    // self.clearsSelectionOnViewWillAppear = false
    
    // Uncomment the following line to display an Edit button in the navigation bar for this view controller.
    // self.navigationItem.rightBarButtonItem = self.editButtonItem()
  }
  
  override func didReceiveMemoryWarning() {
    super.didReceiveMemoryWarning()
    // Dispose of any resources that can be recreated.
  }
  
  // MARK: - Table view data source
  
 
  

  
  
  override func numberOfSectionsInTableView(tableView: UITableView) -> Int {
    // #warning Potentially incomplete method implementation.
    // Return the number of sections.
    return 1
  }
  
  override func tableView(tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
    // #warning Incomplete method implementation.
    // Return the number of rows in the section.
    if tableView == self.searchDisplayController!.searchResultsTableView
    {
      return self.filterBreeds.count
     }
    else
    {
      return dogBreedsArray.count
    }
  }
  
  
  override func tableView(tableView: UITableView, cellForRowAtIndexPath indexPath: NSIndexPath) -> UITableViewCell {
    let cell = tableView.dequeueReusableCellWithIdentifier("cell", forIndexPath: indexPath) as! UITableViewCell
    if tableView == self.searchDisplayController!.searchResultsTableView{
      cell.textLabel?.text = filterBreeds[indexPath.row]
    }
    else
    {
      cell.textLabel?.text = dogBreedsArray[indexPath.row]
    }
    return cell
  }
  
  
  
  
  func getDogBreedsFromAPI()
  {
    NSURLConnection.sendAsynchronousRequest(AppAPI.getBreeds(), queue: NSOperationQueue(), completionHandler:{ (response:NSURLResponse!, data: NSData!, error: NSError!) -> Void in
      var error: AutoreleasingUnsafeMutablePointer<NSError?> = nil
      
      //Convert JSON to object
      let results = JSON(data :data)["breeds"]
      println("JSON LOADED")
      
      println("Parsing JSON into Objects")
      for (key, value) in results {
        println("Parsing Homestay")
        self.dogBreedsArray.append(value["name"].stringValue)
      }
      
      dispatch_async(dispatch_get_main_queue(), {
        self.tableView!.reloadData()
        self.loadingIndicator.stopAnimating()
        self.loadingIndicator.hidden = true
      })
    })
    
    func filterContentForSearchText(searchText: String)
    {
      // Filter the array using the filter method
      self.filterBreeds = dogBreedsArray.filter(
        {
          (text) -> Bool in
          let nameMatch =
          ((searchText == "All") || (searchText.rangeOfString(searchText)) != nil)
          return nameMatch
      })
    }
   

    
  }
  
  
  override func prepareForSegue(segue: UIStoryboardSegue, sender: AnyObject?) {

      if let destination = segue.destinationViewController as? BookingDetailsViewController {
        if let IndexRow = tableView.indexPathForSelectedRow()?.row {
          BreedstransferLabel = dogBreedsArray[IndexRow]
          destination.NameOfBreed = BreedstransferLabel
          
        }
      }
    
  }
  
  
    /*
    // Override to support conditional editing of the table view.
    override func tableView(tableView: UITableView, canEditRowAtIndexPath indexPath: NSIndexPath) -> Bool {
        // Return NO if you do not want the specified item to be editable.
        return true
    }
    */

    /*
    // Override to support editing the table view.
    override func tableView(tableView: UITableView, commitEditingStyle editingStyle: UITableViewCellEditingStyle, forRowAtIndexPath indexPath: NSIndexPath) {
        if editingStyle == .Delete {
            // Delete the row from the data source
            tableView.deleteRowsAtIndexPaths([indexPath], withRowAnimation: .Fade)
        } else if editingStyle == .Insert {
            // Create a new instance of the appropriate class, insert it into the array, and add a new row to the table view
        }    
    }
    */

    /*
    // Override to support rearranging the table view.
    override func tableView(tableView: UITableView, moveRowAtIndexPath fromIndexPath: NSIndexPath, toIndexPath: NSIndexPath) {

    }
    */

    /*
    // Override to support conditional rearranging of the table view.
    override func tableView(tableView: UITableView, canMoveRowAtIndexPath indexPath: NSIndexPath) -> Bool {
        // Return NO if you do not want the item to be re-orderable.
        return true
    }
    */

    /*
    // MARK: - Navigation

    // In a storyboard-based application, you will often want to do a little preparation before navigation
    override func prepareForSegue(segue: UIStoryboardSegue, sender: AnyObject?) {
        // Get the new view controller using [segue destinationViewController].
        // Pass the selected object to the new view controller.
    }
    */

}
